name: syllabus-tracker-services

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app:
        condition: service_started
      frontend:
        condition: service_started
    networks:
      - internal
      - host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://app:8000/api/health"]
      interval: 60s
      timeout: 5s
      retries: 3

  app:
    image: ${REGISTRY}/${IMAGE_NAME}/app:${APP_IMAGE_TAG:-latest}
    restart: unless-stopped
    env_file:
      - ./config/common.env
      - ./config/prod.env
      - ./.secrets.env
    environment:
      - ALLOW_DESTRUCTIVE_MIGRATIONS=${ALLOW_DESTRUCTIVE_MIGRATIONS:-false}
    volumes:
      - app-data:/app/data
    networks:
      - internal
    expose:
      - "8000"

  frontend:
    image: ${REGISTRY}/${IMAGE_NAME}/frontend:${FRONTEND_IMAGE_TAG:-latest}
    restart: unless-stopped
    networks:
      - internal
    expose:
      - "80"
    env_file:
      - config/common.env
      - config/prod.env
      - .secrets.env
    depends_on:
      app:
        condition: service_started

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    group_add:
      - "131"
    volumes:
      - ./config/otel-collector-config.prod.yaml:/etc/otel-collector-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./config/common.env
      - ./config/prod.env
      - ./.secrets.env
    restart: unless-stopped
    networks:
      - internal
    depends_on:
      app:
        condition: service_started
      frontend:
        condition: service_started
      nginx:
        condition: service_healthy

  backup:
    image: alpine:latest
    volumes:
      - app-data:/app/data
      - syllabus-backups:/data/backups
      - ./scripts/backup.sh:/scripts/backup.sh
    entrypoint: /scripts/backup.sh
    env_file:
      - ./config/prod.env
      - ./config/backup-service.env
      - ./.secrets.env
    restart: unless-stopped
    networks:
      - internal
    depends_on:
      app:
        condition: service_started
      frontend:
        condition: service_started
      nginx:
        condition: service_healthy

volumes:
  app-data:
  syllabus-backups:

networks:
  internal:
  host:
    driver: bridge
