version: "3.8"

services:
  app:
    image: ${REGISTRY}/${IMAGE_NAME}/app:${APP_IMAGE_TAG:-latest}
    env_file:
      - ./config/common.env
      - ./config/prod.env
      - ./.secrets.env
    environment:
      - ALLOW_DESTRUCTIVE_MIGRATIONS=${ALLOW_DESTRUCTIVE_MIGRATIONS:-false}
    volumes:
      - app-data:/app/data
    networks:
      - internal
    healthcheck:
      test: ["CMD", "/bin/curl", "-f", "http://localhost:8000/api/health"]
      interval: 15s
      timeout: 10s
      retries: 2
      start_period: 45s
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 120s
        max_failure_ratio: 0
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 5s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  frontend:
    image: ${REGISTRY}/${IMAGE_NAME}/frontend:${FRONTEND_IMAGE_TAG:-latest}
    networks:
      - internal
    deploy:
      replicas: 1
      update_config:
        order: start-first

  nginx:
    image: nginx:alpine
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - internal
      - host
    deploy:
      replicas: 1

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.prod.yaml:/etc/otel-collector-config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - ./config/common.env
      - ./config/prod.env
      - ./.secrets.env
    networks:
      - internal
    deploy:
      replicas: 1

  backup:
    image: alpine:latest
    volumes:
      - app-data:/app/data:ro
      - syllabus-backups:/data/backups
      - ./scripts/backup.sh:/scripts/backup.sh:ro
    env_file:
      - ./config/prod.env
      - ./config/backup-service.env
      - ./.secrets.env
    entrypoint: /scripts/backup.sh
    networks:
      - internal
    deploy:
      replicas: 1

networks:
  internal:
    driver: overlay
  host:
    external: true

volumes:
  app-data:
  syllabus-backups:
