name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: honeycombio/gha-buildevents@v2
      with: 
        apikey: ${{ secrets.HONEYCOMB_API_KEY }}
        dataset: syllabus-tracker-build-events
        status: ${{ job.status }}

    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up SSH
      run: |
        STEP_ID=set_up_ssh
        STEP_START=$(date +%s)
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        buildevents step $TRACE_ID $STEP_ID $STEP_START $STEP_ID
      
    - name: Transfer application files
      run: |
        STEP_ID=transfer_app
        STEP_START=$(date +%s)
        # Create deployment directory if it doesn't exist
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ~/syllabus-tracker"
        
        # Transfer all necessary files
        rsync -avz --exclude='target' --exclude='.git' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/syllabus-tracker/
        
        buildevents step $TRACE_ID $STEP_ID $STEP_START $STEP_ID

    - name: Generate secrets file
      run: |
        STEP_ID=generate_secrets
        STEP_START=$(date +%s)
        
        # Create .secrets.env file with necessary environment variables
        echo "HONEYCOMB_API_KEY=${{ secrets.HONEYCOMB_API_KEY }}" > .secrets.env
        echo "ROCKET_SECRET_KEY=${{ secrets.ROCKET_SECRET_KEY }}" >> .secrets.env
        
        # Transfer to server
        scp .secrets.env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/syllabus-tracker/
        
        # Log timing with buildevents
        buildevents step $TRACE_ID $STEP_ID $STEP_START $STEP_ID
        
    - name: Deploy with Docker
      run: |
        STEP_ID=deploy_docker
        STEP_START=$(date +%s)
          
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ~/syllabus-tracker && docker-compose -f docker-compose.production.yml down || true && docker-compose -f docker-compose.production.yml build --no-cache && docker-compose -f docker-compose.production.yml up -d"
        
        buildevents step $TRACE_ID $STEP_ID $STEP_START $STEP_ID
        
    - name: Create Honeycomb deployment marker
      run: |
        DEPLOY_TIME=$(date +%s)
        GIT_COMMIT_HASH=$(git rev-parse HEAD)
        GIT_COMMIT_MESSAGE=$(git log -1 --pretty=%B | tr -d '\n')
        
        curl -X POST "https://api.honeycomb.io/1/markers/__all__" \
          -H "X-Honeycomb-Team: ${{ secrets.HONEYCOMB_MARKER_KEY }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"message\": \"Deployed commit ${GIT_COMMIT_HASH}\",
            \"type\": \"deploy\",
            \"start_time\": ${DEPLOY_TIME},
            \"url\": \"https://github.com/${{ github.repository }}/commit/${{ github.sha }}\",
            \"metadata\": {
              \"commit_hash\": \"${GIT_COMMIT_HASH}\",
              \"commit_message\": \"${GIT_COMMIT_MESSAGE}\",
              \"github_actor\": \"${{ github.actor }}\",
              \"github_repository\": \"${{ github.repository }}\",
              \"github_ref\": \"${{ github.ref }}\"
            }
          }"
      env:
        HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }}
